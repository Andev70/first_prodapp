(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function o(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=o(e);fetch(e.href,t)}})();const i=document.querySelector(".reset"),a=document.querySelector(".password");console.log("ok");const l=async()=>{try{const r=sessionStorage.getItem("resetToken");return(await fetch("/api/v1/users/new/password",{method:"POST",headers:{authorization:r,Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({password:a.value})})).json()}catch(r){console.log(r.message)}};i.addEventListener("click",r=>{const s=document.querySelector(".msg");r.preventDefault();const o=document.querySelector(".alert-con")||!1;o&&o.remove(),l().then(n=>{n.msg==="password reset successful"?(sessionStorage.clear(),location.href="/login"):s.innerHTML+=`<div
    class="alert-con flex justify-between text-red-200 shadow-inner rounded p-3 bg-red-600"
  >
    <p class="self-center"><strong>Danger </strong>${n.msg}</p>
    <strong class="text-xl align-center cursor-pointer alert-del"
      >&times;</strong
    >
  </div>`})});
